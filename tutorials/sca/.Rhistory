func <- RNifti::readNifti("sub-001_bandassed_denoised_warp_FWHM4.nii.gz")
roi <- roi <- readNIfTI("pcc_mask.nii.gz",reorient = FALSE)
library(magrittr)
library(oro.nifti)
## definir nombre del output
output <- "sub-001_pcc_corrmap_R"
func <- RNifti::readNifti("sub-001_bandassed_denoised_warp_FWHM4.nii.gz")
roi <- roi <- readNIfTI("pcc_mask.nii.gz",reorient = FALSE)
roI <- readNIfTI("pcc_mask.nii.gz",reorient = FALSE)
source('~/.active-rstudio-document', echo=TRUE)
d <- dim(func)
library(neurobase)
mask <- niftiarr(img= roi, arr = 0)
mask@.Data <- func[,,,1]
ortho2(mask)
mask[mask !=0] <- 1
ortho2(mask)
mask@.Data <- func[,,,2]
mask[mask !=0] <- 1
ortho2(mask)
mask@.Data <- func[,,,1]
mask[mask !=0] <- 1
ortho2(mask,crosshairs = F)
func_mask <- niftiarr(img= roi, arr = 0)
func_mask@.Data <- func[,,,1]
func_mask[mask !=0] <- 1
ts <- matrix(func[roi!=0],ncol = d[4]) %>%
colMeans()
ts
rmap <- func_mask
rmap[rmap !=0] <- rvalues
neurobase::write_nifti(rmap,output)
rvalues <- matrix(func[func_mask !=0],ncol=d[4]) %>%
apply(.,1,cor,ts)
rvalues
rmap[rmap !=0] <- rvalues
ortho2(rmap)
neurobase::write_nifti(rmap,output)
